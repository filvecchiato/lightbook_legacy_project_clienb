{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Register.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Input from \"../components/Input\";\nimport * as actions from \"../store/actions\";\nimport { connect } from 'react-redux';\nimport AppButton from \"../components/AppButton\";\nvar image = {\n  uri: 'https://images.unsplash.com/photo-1559406041-c7d2b2e98690?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80'\n};\n\nvar Register = function Register(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordConfirm = _useState8[0],\n      setPasswordConfrim = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bio = _useState12[0],\n      setBio = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error = _useState14[0],\n      setError = _useState14[1];\n\n  var registerUser = function registerUser() {\n    if (password === passwordConfirm) {\n      var data = {\n        username: username,\n        name: name,\n        email: email,\n        password: password\n      };\n      props.onRegister(data);\n    } else {\n      setError('Passwords do not match!!');\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageBackground, {\n    source: image,\n    style: styles.backgroundImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"Name\",\n    value: name,\n    type: \"test\",\n    setAction: setName,\n    placeholder: \"Enter your name...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Username\",\n    value: username,\n    type: \"text\",\n    setAction: setUsername,\n    placeholder: \"Enter username...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    type: \"email\",\n    setAction: setEmail,\n    placeholder: \"Enter email...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    setAction: setPassword,\n    placeholder: \"Enter Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Confirm Password\",\n    value: passwordConfirm,\n    type: \"password\",\n    setAction: setPasswordConfrim,\n    placeholder: \"Enter Password again\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), error ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 20\n    }\n  }, \" \", error, \" \") : null), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    colorButton: \"white\",\n    onPress: function onPress() {\n      return registerUser();\n    },\n    title: \"Register!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  container: {\n    height: '70%',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10\n  },\n  error: {\n    color: 'red',\n    fontSize: 18\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onRegister: function onRegister(data) {\n      return dispatch(actions.createUser(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Register.js"
    ],
    "names": [
      "React",
      "useState",
      "useEffect",
      "Input",
      "actions",
      "connect",
      "AppButton",
      "image",
      "uri",
      "Register",
      "props",
      "username",
      "setUsername",
      "name",
      "setName",
      "email",
      "setEmail",
      "passwordConfirm",
      "setPasswordConfrim",
      "password",
      "setPassword",
      "bio",
      "setBio",
      "error",
      "setError",
      "registerUser",
      "data",
      "onRegister",
      "styles",
      "backgroundImage",
      "container",
      "StyleSheet",
      "create",
      "width",
      "height",
      "resizeMode",
      "justifyContent",
      "alignItems",
      "margin",
      "padding",
      "color",
      "fontSize",
      "mapDispatchToProps",
      "dispatch",
      "createUser"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  TouchableOpacity,\n  StyleSheet,\n  ImageBackground,\n  StatusBar,\n  TextInput,\n} from 'react-native';\nimport Input from '../components/Input';\nimport * as actions from '../store/actions';\nimport { connect } from 'react-redux';\nimport AppButton from '../components/AppButton';\n\nconst image = {\n  uri:\n    'https://images.unsplash.com/photo-1559406041-c7d2b2e98690?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80',\n};\n\nconst Register = (props) => {\n  const [username, setUsername] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [passwordConfirm, setPasswordConfrim] = useState('');\n  const [password, setPassword] = useState('');\n  const [bio, setBio] = useState('');\n  const [error, setError] = useState(null);\n\n  const registerUser = () => {\n    if (password === passwordConfirm) {\n      const data = {\n        username: username,\n        name: name,\n        email: email,\n        password: password,\n      };\n      props.onRegister(data);\n    } else {\n      setError('Passwords do not match!!');\n    }\n  };\n\n  return (\n    <View>\n      <StatusBar hidden />\n      <ImageBackground source={image} style={styles.backgroundImage}>\n        <View style={styles.container}>\n          <Input\n            label=\"Name\"\n            value={name}\n            type=\"test\"\n            setAction={setName}\n            placeholder=\"Enter your name...\"\n          />\n          <Input\n            label=\"Username\"\n            value={username}\n            type=\"text\"\n            setAction={setUsername}\n            placeholder=\"Enter username...\"\n          />\n          <Input\n            label=\"Email\"\n            value={email}\n            type=\"email\"\n            setAction={setEmail}\n            placeholder=\"Enter email...\"\n          />\n          <Input\n            label=\"Password\"\n            value={password}\n            type=\"password\"\n            setAction={setPassword}\n            placeholder=\"Enter Password\"\n          />\n          <Input\n            label=\"Confirm Password\"\n            value={passwordConfirm}\n            type=\"password\"\n            setAction={setPasswordConfrim}\n            placeholder=\"Enter Password again\"\n          />\n          {error ? <Text style={styles.error}> {error} </Text> : null}\n        </View>\n        <View>\n          <AppButton\n            colorButton=\"white\"\n            onPress={() => registerUser()}\n            title=\"Register!\"\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center',\n  },\n  container: {\n    height: '70%',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n  },\n  error: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRegister: (data) => dispatch(actions.createUser(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
