{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Explore.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport Image from \"../components/Image\";\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { connect } from 'react-redux';\nimport * as actions from \"../store/actions\";\n\nvar Explore = function Explore(props) {\n  var loading = props.loading,\n      error = props.error,\n      images = props.images,\n      getImages = props.getImages;\n\n  function changeScreenOrientation() {\n    return _regeneratorRuntime.async(function changeScreenOrientation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useFocusEffect(React.useCallback(function () {\n    changeScreenOrientation();\n    getImages();\n  }, []));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), loading && !error && React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \" Loading ... \"), !loading && error && React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \" Error! \", error), !loading && !error && !!images.length && React.createElement(FlatList, {\n    data: images,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Image, {\n        image: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), !loading && !error && !images.length && React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \" No Photos found \"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  message: {\n    color: 'red',\n    width: '90%',\n    margin: 'auto'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    images: state.general.exploreImages || []\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getImages: function getImages() {\n      return dispatch(actions.getExploreImages());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Explore);",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Explore.js"
    ],
    "names": [
      "React",
      "useEffect",
      "useState",
      "useFocusEffect",
      "Image",
      "ScreenOrientation",
      "connect",
      "actions",
      "Explore",
      "props",
      "loading",
      "error",
      "images",
      "getImages",
      "changeScreenOrientation",
      "lockAsync",
      "OrientationLock",
      "LANDSCAPE_RIGHT",
      "useCallback",
      "styles",
      "container",
      "message",
      "length",
      "item",
      "id",
      "StyleSheet",
      "create",
      "display",
      "flexDirection",
      "justifyContent",
      "color",
      "width",
      "margin",
      "mapStateToProps",
      "state",
      "general",
      "exploreImages",
      "mapDispatchToProps",
      "dispatch",
      "getExploreImages"
    ],
    "mappings": ";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP;AACA,OAAO,KAAKC,iBAAZ,MAAmC,yBAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,OADiB,GACqBD,KADrB,CACjBC,OADiB;AAAA,MACRC,KADQ,GACqBF,KADrB,CACRE,KADQ;AAAA,MACDC,MADC,GACqBH,KADrB,CACDG,MADC;AAAA,MACOC,SADP,GACqBJ,KADrB,CACOI,SADP;;AAGzB,WAAeC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQT,iBAAiB,CAACU,SAAlB,CACJV,iBAAiB,CAACW,eAAlB,CAAkCC,eAD9B,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAd,EAAAA,cAAc,CACZH,KAAK,CAACkB,WAAN,CAAkB,YAAM;AACtBJ,IAAAA,uBAAuB;AACvBD,IAAAA,SAAS;AACV,GAHD,EAGG,EAHH,CADY,CAAd;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,OAAO,IAAI,CAACC,KAAZ,IAAqB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFxB,EAGG,CAACX,OAAD,IAAYC,KAAZ,IAAqB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsCV,KAAtC,CAHxB,EAIG,CAACD,OAAD,IAAY,CAACC,KAAb,IAAsB,CAAC,CAACC,MAAM,CAACU,MAA/B,IACC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEV,MADR;AAEE,IAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,kBAAaA,IAAI,CAACC,EAAlB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGD,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAWG,CAACb,OAAD,IAAY,CAACC,KAAb,IAAsB,CAACC,MAAM,CAACU,MAA9B,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAZJ,CADF;AAiBD,CAjCD;;AAmCA,IAAMF,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,KAAK,EAAE,KADA;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,MAAM,EAAE;AAHD;AANsB,CAAlB,CAAf;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLtB,IAAAA,MAAM,EAAEsB,KAAK,CAACC,OAAN,CAAcC,aAAd,IAA+B;AADlC,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLzB,IAAAA,SAAS,EAAE;AAAA,aAAMyB,QAAQ,CAAC/B,OAAO,CAACgC,gBAAR,EAAD,CAAd;AAAA;AADN,GAAP;AAGD,CAJD;;AAMA,eAAejC,OAAO,CAAC2B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C7B,OAA7C,CAAf",
    "sourcesContent": [
      "import React, { useEffect, useState } from 'react';\nimport { View, Text, StatusBar, StyleSheet, FlatList } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport Image from '../components/Image';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\n\nconst Explore = (props) => {\n  const { loading, error, images, getImages } = props;\n\n  async function changeScreenOrientation() {\n    await ScreenOrientation.lockAsync(\n      ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT,\n    );\n  }\n\n  useFocusEffect(\n    React.useCallback(() => {\n      changeScreenOrientation();\n      getImages();\n    }, []),\n  );\n\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden />\n      {loading && !error && <Text style={styles.message}> Loading ... </Text>}\n      {!loading && error && <Text style={styles.message}> Error! {error}</Text>}\n      {!loading && !error && !!images.length && (\n        <FlatList\n          data={images}\n          keyExtractor={(item) => `${item.id}`}\n          renderItem={({ item }) => <Image image={item} />}\n        />\n      )}\n      {!loading && !error && !images.length && (\n        <Text style={styles.message}> No Photos found </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  message: {\n    color: 'red',\n    width: '90%',\n    margin: 'auto',\n  },\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    images: state.general.exploreImages || [],\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getImages: () => dispatch(actions.getExploreImages()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Explore);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
