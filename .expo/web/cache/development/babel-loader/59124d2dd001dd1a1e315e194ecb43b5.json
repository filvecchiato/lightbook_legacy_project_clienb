{
  "ast": null,
  "code": "var _this = this,\n    _jsxFileName = \"/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/App.js\";\n\nimport React from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport authenticationService from \"./services/authenticationService\";\nimport Welcome from \"./screens/Welcome\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport mainReducer from \"./store/reducers/mainReducer\";\nimport Upload from \"./screens/Upload\";\nimport LoginPage from \"./screens/Login\";\nvar isAuthenticated = authenticationService.currentUserValue;\nvar composeEnhancers = process.env.NODE_ENV !== 'production' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\nvar rootReducer = combineReducers({\n  general: mainReducer\n});\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk)));\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Welcome\",\n    component: Welcome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Wrapper\",\n    component: Wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Upload\",\n    component: Upload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })) : React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default App;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/App.js"
    ],
    "names": [
      "React",
      "Wrapper",
      "authenticationService",
      "Welcome",
      "createStackNavigator",
      "NavigationContainer",
      "Provider",
      "createStore",
      "compose",
      "combineReducers",
      "applyMiddleware",
      "ReduxThunk",
      "mainReducer",
      "Upload",
      "LoginPage",
      "isAuthenticated",
      "currentUserValue",
      "composeEnhancers",
      "process",
      "env",
      "NODE_ENV",
      "window",
      "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
      "rootReducer",
      "general",
      "store",
      "Stack",
      "App",
      "headerShown"
    ],
    "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,OAAP;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAGA,IAAMC,eAAe,GAAGb,qBAAqB,CAACc,gBAA9C;AAEA,IAAMC,gBAAgB,GAEpBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIC,MAAM,CAACC,oCAAP,IAA+Cd,OADnD,GAEIA,OAJN;AAMA,IAAMe,WAAW,GAAGd,eAAe,CAAC;AAClCe,EAAAA,OAAO,EAAEZ;AADyB,CAAD,CAAnC;AAIA,IAAMa,KAAK,GAAGlB,WAAW,CACvBgB,WADuB,EAEvBN,gBAAgB,CAACP,eAAe,CAACC,UAAD,CAAhB,CAFO,CAAzB;AAKA,IAAMe,KAAK,GAAGtB,oBAAoB,EAAlC;;AAQA,IAAMuB,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,eAAe,GAChB,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEZ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEY,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADgB,GAMd,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF,CADF,CADF;AAgBD,CAjBD;;AAqBA,eAAea,GAAf",
    "sourcesContent": [
      "import React from 'react';\nimport Wrapper from './components/Wrapper';\nimport authenticationService from './services/authenticationService';\nimport Welcome from './screens/Welcome';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport mainReducer from './store/reducers/mainReducer';\nimport Upload from './screens/Upload';\nimport LoginPage from './screens/Login';\n\n\nconst isAuthenticated = authenticationService.currentUserValue;\n\nconst composeEnhancers =\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV !== 'production'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\nconst rootReducer = combineReducers({\n  general: mainReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(ReduxThunk)),\n);\n\nconst Stack = createStackNavigator();\n\n// const logout = () => {\n//   authenticationService.logout();\n//   history.push('/login');\n// };\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {isAuthenticated ?\n          <>\n            <Stack.Screen name=\"Welcome\" component={Welcome} />\n            <Stack.Screen name=\"Wrapper\" component={Wrapper} />\n            <Stack.Screen name=\"Upload\" component={Upload} />\n          </>\n          : <Stack.Screen name=\"Login\" component={LoginPage} />\n          }\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n};\n\n//if no user, create. if logged out, show login. else:\n\nexport default App;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
