{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/UserGallery.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport Image from \"../components/Image\";\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { connect } from 'react-redux';\nimport * as actions from \"../store/actions\";\n\nvar UserGallery = function UserGallery(props) {\n  var loading = props.loading,\n      error = props.error,\n      userImages = props.userImages,\n      getImages = props.getImages;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  function changeScreenOrientation() {\n    return _regeneratorRuntime.async(function changeScreenOrientation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useFocusEffect(React.useCallback(function () {\n    var isActive = true;\n    forceUpdate(function (s) {\n      return !s;\n    });\n    changeScreenOrientation();\n    getImages();\n    return function () {\n      isActive = false;\n    };\n  }, []));\n  console.log('images', userImages);\n  return React.createElement(View, {\n    style: (styles.container, {\n      height: window.height,\n      width: window.width\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), loading && !error ? React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \" Loading ... \") : null, !loading && error ? React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \" Error!\") : null, !loading && !error && !!userImages.length ? React.createElement(FlatList, {\n    data: userImages,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Image, {\n        image: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : null, !loading && !error && !userImages.length ? React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \" No Photos found \") : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  message: {\n    color: 'red',\n    width: '90%',\n    margin: 'auto'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userImages: state.general.user.images,\n    loading: state.general.loading,\n    error: state.general.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getImages: function getImages(userId) {\n      return dispatch(actions.getUserImages(userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserGallery);",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/UserGallery.js"
    ],
    "names": [
      "React",
      "useState",
      "useFocusEffect",
      "Image",
      "ScreenOrientation",
      "connect",
      "actions",
      "UserGallery",
      "props",
      "loading",
      "error",
      "userImages",
      "getImages",
      "forceUpdate",
      "changeScreenOrientation",
      "lockAsync",
      "OrientationLock",
      "LANDSCAPE_RIGHT",
      "useCallback",
      "isActive",
      "s",
      "console",
      "log",
      "styles",
      "container",
      "height",
      "window",
      "width",
      "message",
      "length",
      "item",
      "id",
      "StyleSheet",
      "create",
      "display",
      "flexDirection",
      "justifyContent",
      "color",
      "margin",
      "mapStateToProps",
      "state",
      "general",
      "user",
      "images",
      "mapDispatchToProps",
      "dispatch",
      "userId",
      "getUserImages"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StatusBar,\n  StyleSheet,\n  FlatList,\n  useWindowDimensions,\n  Dimensions,\n} from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport Image from '../components/Image';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\n\nconst UserGallery = (props) => {\n  const { loading, error, userImages, getImages } = props;\n\n  const [, forceUpdate] = useState();\n\n  async function changeScreenOrientation() {\n    await ScreenOrientation.lockAsync(\n      ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT,\n    );\n  }\n\n  useFocusEffect(\n    React.useCallback(() => {\n      let isActive = true;\n      forceUpdate((s) => !s);\n      changeScreenOrientation();\n      getImages();\n      return () => {\n        isActive = false;\n      };\n    }, []),\n  );\n    console.log('images', userImages)\n  return (\n    <View\n      style={(styles.container, { height: window.height, width: window.width })}\n    >\n      <StatusBar hidden />\n      {loading && !error ? (\n        <Text style={styles.message}> Loading ... </Text>\n      ) : null}\n      {!loading && error ? (\n        <Text style={styles.message}> Error!</Text>\n      ) : null}\n      {!loading && !error && !!userImages.length ? (\n        <FlatList\n          data={userImages}\n          keyExtractor={(item) => `${item.id}`}\n          renderItem={({ item }) => <Image image={item} />}\n        />\n      ) : null}\n      {!loading && !error && !userImages.length ? (\n        <Text style={styles.message}> No Photos found </Text>\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  message: {\n    color: 'red',\n    width: '90%',\n    margin: 'auto',\n  },\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    userImages: state.general.user.images,\n    loading: state.general.loading,\n    error: state.general.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getImages: (userId) => dispatch(actions.getUserImages(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserGallery);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
