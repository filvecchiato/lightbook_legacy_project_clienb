{
  "ast": null,
  "code": "var api = 'http://localhost:3001';\nexport default {\n  login: login,\n  createUser: createUser\n};\n\nfunction login(data) {\n  var requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: data.email,\n      password: data.password\n    })\n  };\n  return fetch(api + \"/login\", requestOptions).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if ([401, 403].indexOf(response.status) !== -1) {\n      return {\n        response: 'error',\n        status: 401\n      };\n    } else {\n      console.log('authservice', response);\n      return response;\n    }\n  });\n}\n\nfunction createUser(data) {\n  var requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: data\n    })\n  };\n  return fetch(api + \"/signUp\", requestOptions).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if ([401, 403].indexOf(response.status) !== -1) {\n      return {\n        response: 'error',\n        status: 401\n      };\n    } else {\n      console.log('authservice', response);\n      return {\n        response: response,\n        status: 200\n      };\n    }\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/services/authenticationService.js"
    ],
    "names": [
      "api",
      "login",
      "createUser",
      "data",
      "requestOptions",
      "method",
      "headers",
      "body",
      "JSON",
      "stringify",
      "email",
      "password",
      "fetch",
      "then",
      "response",
      "json",
      "indexOf",
      "status",
      "console",
      "log"
    ],
    "mappings": "AAAA,IAAMA,GAAG,GAAG,uBAAZ;AAEA,eAAe;AACbC,EAAAA,KAAK,EAALA,KADa;AAEbC,EAAAA,UAAU,EAAVA;AAFa,CAAf;;AAKA,SAASD,KAAT,CAAeE,IAAf,EAAqB;AACnB,MAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAAb;AAAoBC,MAAAA,QAAQ,EAAER,IAAI,CAACQ;AAAnC,KAAf;AAHe,GAAvB;AAMA,SAAOC,KAAK,CAAIZ,GAAJ,aAAiBI,cAAjB,CAAL,CACJS,IADI,CACC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADD,EAEJF,IAFI,CAEC,UAACC,QAAD,EAAc;AAElB,QAAI,CAAC,GAAD,EAAM,GAAN,EAAWE,OAAX,CAAmBF,QAAQ,CAACG,MAA5B,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,aAAO;AAACH,QAAAA,QAAQ,EAAE,OAAX;AAAoBG,QAAAA,MAAM,EAAE;AAA5B,OAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,QAA3B;AACA,aAAOA,QAAP;AACD;AACF,GAVI,CAAP;AAWD;;AAED,SAASZ,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,IAAI,EAAJA;AAAF,KAAf;AAHe,GAAvB;AAMA,SAAOS,KAAK,CAAIZ,GAAJ,cAAkBI,cAAlB,CAAL,CACJS,IADI,CACC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADD,EAEJF,IAFI,CAEC,UAACC,QAAD,EAAc;AAClB,QAAI,CAAC,GAAD,EAAM,GAAN,EAAWE,OAAX,CAAmBF,QAAQ,CAACG,MAA5B,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,aAAO;AAAEH,QAAAA,QAAQ,EAAE,OAAZ;AAAqBG,QAAAA,MAAM,EAAE;AAA7B,OAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,QAA3B;AACA,aAAO;AAAEA,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBG,QAAAA,MAAM,EAAE;AAA9B,OAAP;AACD;AACF,GATI,CAAP;AAUD",
    "sourcesContent": [
      "const api = 'http://localhost:3001';\n\nexport default {\n  login,\n  createUser\n};\n\nfunction login(data) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({email: data.email, password: data.password}),\n  };\n\n  return fetch(`${api}/login`, requestOptions)\n    .then((response) => response.json())\n    .then((response) => {\n      \n      if ([401, 403].indexOf(response.status) !== -1) {\n        return {response: 'error', status: 401};\n      } else {\n        console.log('authservice', response);\n        return response;\n      }\n    });\n}\n\nfunction createUser(data) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ data }),\n  };\n\n  return fetch(`${api}/signUp`, requestOptions)\n    .then((response) => response.json())\n    .then((response) => {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        return { response: 'error', status: 401 };\n      } else {\n        console.log('authservice', response);\n        return { response: response, status: 200 };\n      }\n    });\n}"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
