{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Login.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AppButton from \"../components/AppButton\";\nimport Input from \"../components/Input\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../store/actions\";\nvar image = {\n  uri: 'https://images.unsplash.com/photo-1559406041-c7d2b2e98690?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80'\n};\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageBackground, {\n    source: image,\n    style: styles.backgroundImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    type: \"email\",\n    setAction: setEmail,\n    placeholder: \"Enter email...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    setAction: setPassword,\n    placeholder: \"Enter password...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(AppButton, {\n    onPress: function onPress() {\n      return onLogin({\n        email: email,\n        password: password\n      });\n    },\n    title: \"Sign In\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: 'calc(100%  - 10',\n    margin: 10,\n    padding: 10\n  },\n  form: {\n    width: '100%',\n    height: '80%',\n    marginTop: 0,\n    display: 'flex',\n    alignItems: 'center',\n    flex: 2\n  },\n  button: {\n    flex: 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.general.user.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLogin: function onLogin(data) {\n      return dispatch(actions.loginUser(data));\n    },\n    onCreateUser: function onCreateUser(data) {\n      return dispatch(actions.createUser(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);",
  "map": {
    "version": 3,
    "sources": [
      "/Users/filippovecchiato/Desktop/Desktop-prov/Codeworks/projects/lightbox_legacy/lightbox_legacy_project_client/screens/Login.js"
    ],
    "names": [
      "React",
      "useState",
      "useEffect",
      "AppButton",
      "Input",
      "connect",
      "actions",
      "image",
      "uri",
      "Login",
      "navigation",
      "email",
      "setEmail",
      "password",
      "setPassword",
      "styles",
      "backgroundImage",
      "container",
      "form",
      "button",
      "onLogin",
      "StyleSheet",
      "create",
      "width",
      "height",
      "resizeMode",
      "justifyContent",
      "flex",
      "alignItems",
      "margin",
      "padding",
      "marginTop",
      "display",
      "mapStateToProps",
      "state",
      "isLoggedIn",
      "general",
      "user",
      "token",
      "mapDispatchToProps",
      "dispatch",
      "data",
      "loginUser",
      "onCreateUser",
      "createUser"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  StatusBar,\n} from 'react-native';\nimport AppButton from '../components/AppButton';\nimport Input from '../components/Input';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\n\nconst image = {\n  uri:\n    'https://images.unsplash.com/photo-1559406041-c7d2b2e98690?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80',\n};\n// not connected, mock up for login\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <View>\n      <StatusBar hidden />\n      <ImageBackground source={image} style={styles.backgroundImage}>\n        <View style={styles.container}>\n          <View style={styles.form}> \n            <Input\n              label=\"Email\"\n              value={email}\n              type=\"email\"\n              setAction={setEmail}\n              placeholder=\"Enter email...\"\n            />\n            <Input\n              label=\"Password\"\n              value={password}\n              type=\"password\"\n              setAction={setPassword}\n              placeholder=\"Enter password...\"\n            />\n          </View>\n          <View style={styles.button}>\n            <AppButton\n              onPress={() =>\n                onLogin({\n                  email: email,\n                  password: password,\n                })\n              }\n              title=\"Sign In\"\n            />\n          </View>\n        </View>\n        </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: 'calc(100%  - 10',\n    margin: 10,\n    padding: 10,\n  },\n  form: {\n    width: '100%',\n    height: '80%',\n    marginTop: 0,\n    display: 'flex',\n    alignItems: 'center',\n    flex: 2,\n  },\n  button: {\n    flex: 1\n  }\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.general.user.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (data) => dispatch(actions.loginUser(data)),\n    onCreateUser: (data) => dispatch(actions.createUser(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
